version: "3.9"

services:
  db:
    image: mysql:8.0
    container_name: chattingo_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: chattingo_db
      MYSQL_USER: root1
      MYSQL_PASSWORD: test@123
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root1", "-ptest@123"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - chattingo_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chattingo_backend
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    environment:
      CORS_ALLOWED_HEADERS: ${CORS_ALLOWED_HEADERS}
      CORS_ALLOWED_METHODS: ${CORS_ALLOWED_METHODS}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      JWT_SECRET: ${JWT_SECRET}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVER_PORT: ${SERVER_PORT}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    networks:
      - chattingo_net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chattingo_frontend
    env_file:
      - ./frontend/.env
    environment:
      REACT_APP_API_URL: http://72.60.111.89:8081
      REACT_APP_WS_URL: http://72.60.111.89:8081/ws
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - chattingo_net
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  db_data:

networks:
  chattingo_net:
    driver: bridge
